{"name":"Nodejs-youtube","body":"## Installation\r\n\r\n[![Build Status](https://secure.travis-ci.org/fvdm/nodejs-youtube.png?branch=master)](http://travis-ci.org/fvdm/nodejs-youtube)\r\n\r\n```\r\nnpm install youtube-feeds\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\n// load the module\r\nvar youtube = require('youtube-feeds')\r\n\r\n// search parkour videos\r\nyoutube.feeds.videos( {q: 'parkour'}, console.log )\r\n```\r\n\r\n# Feeds\r\n\r\n## feeds.videos\r\n**( [vars,] callback )**\r\n\r\nGet a list of recently published or updated videos, or search them all, filter, sort, etc.\r\n\r\n[API docs: custom query parameters](https://developers.google.com/youtube/2.0/developers_guide_protocol_api_query_parameters#Custom_parameters)\r\n\r\n```js\r\nyoutube.feeds.videos(\r\n\t{\r\n\t\tq: \t\t\t\t'parkour',\r\n\t\t'max-results':\t2,\r\n\t\torderby:\t\t'published'\r\n\t},\r\n\tconsole.log\r\n)\r\n```\r\n\r\nOutput:\r\n\r\n```js\r\n{ updated: '2012-06-18T17:55:11.294Z',\r\n  totalItems: 6985,\r\n  startIndex: 1,\r\n  itemsPerPage: 2,\r\n  items: \r\n   [ { id: 'WEeqHj3Nj2c',\r\n       uploaded: '2006-06-08T01:17:06.000Z',\r\n       updated: '2012-06-18T15:53:06.000Z',\r\n       uploader: 'sauloca',\r\n       category: 'Sports',\r\n       title: 'Parkour and FreeRunning',\r\n       description: 'Edited by: Saulo Sampson Chase [..]',\r\n       tags: \r\n        [ 'le',\r\n          'parkour',\r\n          'free',\r\n          'running' ],\r\n       thumbnail: \r\n        { sqDefault: 'http://i.ytimg.com/vi/WEeqHj3Nj2c/default.jpg',\r\n          hqDefault: 'http://i.ytimg.com/vi/WEeqHj3Nj2c/hqdefault.jpg' },\r\n       player: \r\n        { default: 'https://www.youtube.com/watch?v=WEeqHj3Nj2c&feature=youtube_gdata_player',\r\n          mobile: 'https://m.youtube.com/details?v=WEeqHj3Nj2c' },\r\n       content: \r\n        { '1': 'rtsp://v8.cache8.c.youtube.com/CiILENy73wIaGQlnj809HqpHWBMYDSANFEgGUgZ2aWRlb3MM/0/0/0/video.3gp',\r\n          '5': 'https://www.youtube.com/v/WEeqHj3Nj2c?version=3&f=videos&app=youtube_gdata',\r\n          '6': 'rtsp://v8.cache8.c.youtube.com/CiILENy73wIaGQlnj809HqpHWBMYESARFEgGUgZ2aWRlb3MM/0/0/0/video.3gp' },\r\n       duration: 218,\r\n       geoCoordinates: { latitude: -7.100892543792725, longitude: -34.91455078125 },\r\n       rating: 4.862864,\r\n       likeCount: '85314',\r\n       ratingCount: 88343,\r\n       viewCount: 32718590,\r\n       favoriteCount: 99541,\r\n       accessControl: \r\n        { comment: 'denied',\r\n          commentVote: 'allowed',\r\n          videoRespond: 'moderated',\r\n          rate: 'allowed',\r\n          embed: 'allowed',\r\n          list: 'allowed',\r\n          autoPlay: 'allowed',\r\n          syndicate: 'allowed' } },\r\n     { id: 'cNvJy0zoXOY',\r\n       uploaded: '2010-05-01T02:21:25.000Z',\r\n       updated: '2012-06-18T16:24:52.000Z',\r\n       uploader: 'damienwalters',\r\n       category: 'Sports',\r\n       title: 'Damien Walters 2010',\r\n       description: 'Training and new things [..]',\r\n       tags: \r\n        [ 'Tumbling',\r\n          'Gymnastics',\r\n          'Freerunning',\r\n          'Stunts' ],\r\n       thumbnail: \r\n        { sqDefault: 'http://i.ytimg.com/vi/cNvJy0zoXOY/default.jpg',\r\n          hqDefault: 'http://i.ytimg.com/vi/cNvJy0zoXOY/hqdefault.jpg' },\r\n       player: \r\n        { default: 'https://www.youtube.com/watch?v=cNvJy0zoXOY&feature=youtube_gdata_player',\r\n          mobile: 'https://m.youtube.com/details?v=cNvJy0zoXOY' },\r\n       content: \r\n        { '1': 'rtsp://v7.cache7.c.youtube.com/CiILENy73wIaGQnmXOhMy8nbcBMYDSANFEgGUgZ2aWRlb3MM/0/0/0/video.3gp',\r\n          '5': 'https://www.youtube.com/v/cNvJy0zoXOY?version=3&f=videos&app=youtube_gdata',\r\n          '6': 'rtsp://v3.cache5.c.youtube.com/CiILENy73wIaGQnmXOhMy8nbcBMYESARFEgGUgZ2aWRlb3MM/0/0/0/video.3gp' },\r\n       duration: 164,\r\n       aspectRatio: 'widescreen',\r\n       recorded: '2010-06-29',\r\n       location: 'england',\r\n       rating: 4.969567,\r\n       likeCount: '94337',\r\n       ratingCount: 95060,\r\n       viewCount: 18004468,\r\n       favoriteCount: 107421,\r\n       commentCount: 31015,\r\n       accessControl: \r\n        { comment: 'allowed',\r\n          commentVote: 'allowed',\r\n          videoRespond: 'moderated',\r\n          rate: 'allowed',\r\n          embed: 'allowed',\r\n          list: 'allowed',\r\n          autoPlay: 'allowed',\r\n          syndicate: 'allowed' } } ] }\r\n```\r\n\r\n## feeds.related\r\n**( videoid, [vars,] callback )**\r\n\r\nGet related videos for a video with **videoid**.\r\n\r\n## feeds.responses \r\n**( videoid, [vars,] callback )**\r\n\r\nGet videos in response to **videoid**.\r\n\r\n## feeds.comments\r\n**( videoid, [vars,] callback )**\r\n\r\nGet comments to a video. This is still in the original XML-to-JSON format as YouTube does not have JSON-C available for this feed. This may change in future (major) versions of this module.\r\n\r\n## feeds.standard\r\n**( feed, [vars,] callback )**\r\n\r\nGet a standard feed, such as most viewed or top rated videos. Worldwide, local or by subject (or a combination).\r\n\r\n[API docs: Standard feeds](https://developers.google.com/youtube/2.0/reference#Standard_feeds)\r\n\r\n**Example:** most recent videos worldwide:\r\n\r\n```js\r\nyoutube.feeds.standard( 'most_recent', console.log )\r\n```\r\n\r\n**Example:** today's top-rated News videos in the Netherlands:\r\n\r\n```js\r\nyoutube.feeds.standard( 'NL/top_rated_News', {time: 'today'}, console.log )\r\n```\r\n\r\n## feeds.playlist\r\n**( playlistid, [vars,] callback )**\r\n\r\nGet videos on a certain playlist.\r\n\r\n# Video\r\n\r\nThe **video** function provides shorthand methods for one specific video.\r\n\r\n## video\r\n**( videoid [, callback] )**\r\n\r\nSame as video.details\r\n\r\n```js\r\nyoutube.video( 'ern37eWDnT0', console.log )\r\n```\r\n\r\n## video.details\r\n**( callback )**\r\n\r\nGet details for one video.\r\n\r\n```js\r\nyoutube.video( 'ern37eWDnT0' ).details( console.log )\r\n```\r\n\r\n## video.related\r\n**( [vars,] callback )**\r\n\r\nGet related videos, same as **feeds.related**.\r\n\r\n```js\r\nyoutube.video( 'ern37eWDnT0' ).related( {'max-results': 2}, console.log )\r\n```\r\n\r\n## video.responses\r\n\r\n**( [vars,] callback )**\r\n\r\nGet videos in response to one video, same as **feeds.responses**.\r\n\r\n```js\r\nyoutube.video( 'ern37eWDnT0' ).responses( {'max-results': 2}, console.log )\r\n```\r\n\r\n## videos.comments\r\n\r\n**( [vars,] callback )**\r\n\r\nGet comments to a video, same as **feeds.comments**.\r\n\r\n```js\r\nyoutube.video( 'ern37eWDnT0' ).comments( {'max-results': 2}, console.log )\r\n```\r\n\r\n# User\r\n\r\nGet (public) feed data for one specific user.\r\n\r\n## user\r\n**( userid [, callback] )**\r\n\r\nSame as user.profile\r\n\r\n```js\r\nyoutube.user( 'unknowntitle', console.log )\r\n```\r\n\r\n## user.profile\r\n**( callback )**\r\n\r\nGet user profile, in old XML-to-JSON style.\r\n\r\n```js\r\nyoutube.user( 'unknowntitle' ).profile( console.log )\r\n```\r\n\r\n## user.favorites\r\n**( [vars,] callback )**\r\n\r\nGet the user's favorite videos. You can optionally filter the results like the other feeds.\r\n\r\n```js\r\nyoutube.user( 'unknowntitle' ).favorites( console.log )\r\n```\r\n\r\n## user.playlists\r\n**( [vars,] callback )**\r\n\r\nGet user playlists. Use **feeds.playlist** to get the videos.\r\n\r\n# Communication\r\n\r\n## talk\r\n**( path [, fields] callback [, oldJSON] )**\r\n\r\nDirectly talk to the API. This function takes care of connecting and calling the callback only when valid JSON is returned.\r\n\r\n* **path** - string - full method path without leading slash\r\n* **fields** - object - GET parameters\r\n* **callback** - function - callback function to receive results\r\n* **oldJSON** - force old XML-to-JSON format instead of clean JSON-C\r\n\r\n# License\r\n\r\nThis module is **COPYLEFT** meaning you can do with it anything you want except copyrighting it. If possible it would be nice to include the source URL along with the code: https://github.com/fvdm/nodejs-youtube","tagline":"Access public YouTube data feeds from your Node.js apps","google":"UA-3580504-60","note":"Don't delete this file! It's used internally to help with page regeneration."}